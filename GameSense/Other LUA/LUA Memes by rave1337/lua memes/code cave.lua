local ffi = require("ffi")
ffi.cdef[[
	struct code {
		char x[48];
	};
]]
local code_cave = client.find_signature("v8.dll", "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00") or error("Failed to find code cave!")
local shellcode = "\x31\xD2\x52\x68\x63\x61\x6C\x63\x54\x59\x52\x51\x64\x8B\x72\x30\x8B\x76\x0C\x8B\x76\x0C\xAD\x8B\x30\x8B\x7E\x18\x8B\x5F\x3C\x8B\x5C\x1F\x78\x8B\x74\x1F\x20\x01\xFE\x8B\x54\x1F\x24\x0F\xB7\x2C\x17\x42\x42\xAD\x81\x3C\x07\x57\x69\x6E\x45\x75\xF0\x8B\x74\x1F\x1C\x01\xFE\x03\x3C\xAE\xFF\xD7"
local code_cave_address = tonumber(ffi.cast("uintptr_t", code_cave))
local casted_cave = ffi.cast("struct code&", code_cave)
for i = 0, 47 do
	casted_cave.x[i] = ffi.cast("char", string.sub(shellcode, i + 1, i + 1))
end